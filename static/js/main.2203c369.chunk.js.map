{"version":3,"sources":["images/bird.png","images/fg.png","images/pipe-bottom.png","images/pipe-top.png","images/bg.png","serviceWorker.js","action.js","constant.js","bird/Bird.js","game/ForeGround.js","pipe/Pipe.js","game/Game.js","App.js","bird/reducer.js","pipe/reducer.js","store.js","game/reducer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","actionType","gameStatus","pipeInfo","keyCode","screen","birdInfo","interval","Bird","top","rotate","style","position","left","height","width","background","ImgBird","transform","transition","connect","bird","prototype","PropTypes","number","isRequired","ForeGround","bottom","ImgForeBg","Pipe","leftPadding","topPipes","map","index","topPipeHeight","key","ImgTopPipe","backgroundPosition","ImgBottomPipe","pipe","elementType","VERTICAL_DISTANCE","HORIZONTAL_DISTANCE","HEIGHT","birdIntervalID","pipeMoveIntervalID","pipeGeneratorIntervalID","Game","handleKeyPress","e","props","fly","start","document","addEventListener","this","removeEventListener","StyledGame","Component","dispatch","getState","game","status","setInterval","type","check","clearInterval","pipePosition","x1","y1","x2","y2","filter","length","mapDispatchToProps","styled","div","ImgBg","App","store","StyledApp","initialState","rootReducer","combineReducers","state","Math","round","random","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","GlobalStyle","createGlobalStyle","normalize","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2203c369.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bird.cab12c37.png\";","module.exports = __webpack_public_path__ + \"static/media/fg.6ecbd537.png\";","module.exports = __webpack_public_path__ + \"static/media/pipe-bottom.f7914292.png\";","module.exports = __webpack_public_path__ + \"static/media/pipe-top.07cd2335.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.f97dc14b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const actionType = {\n  BIRD_FLY: \"BIRD_FLY\",\n  BIRD_FALL: \"BIRD_FALL\",\n\n  PIPE_MOVE: \"PIPE_MOVE\",\n  PIPE_GENERATE: \"PIPE_GENERATE\",\n\n  GAME_START: \"GAME_START\",\n  GAME_OVER: \"GAME_OVER\",\n};\n","export const gameStatus = {\n  GAME_OVER: \"GAME_OVER\",\n  PLAYING: \"PLAYING\",\n};\n\nexport const pipeInfo = {\n  WIDTH: 52,\n  LEFT: 300,\n  VERTICAL_DISTANCE: 100,\n  HORIZONTAL_DISTANCE: 200,\n};\n\nexport const keyCode = {\n  SPACE: 32,\n};\n\nexport const screen = {\n  WIDTH: 288,\n  HEIGHT: 512,\n  GROUND_HEIGHT: 108,\n};\n\nexport const birdInfo = {\n  LEFT: 122,\n  WIDTH: 38,\n  HEIGHT: 26,\n};\n\nexport const interval = {\n  BIRD_FALL: 250,\n  PIPE_MOVE: 200,\n  PIPE_GENEGRATE: 3000,\n};\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport ImgBird from \"../images/bird.png\";\nimport { birdInfo } from \"../constant\";\n\nconst Bird = ({ top, rotate }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: top,\n        left: birdInfo.LEFT,\n        height: birdInfo.HEIGHT,\n        width: birdInfo.WIDTH,\n        background: `url(${ImgBird})`,\n        transform: `rotate(${rotate}deg)`,\n        transition: \"transform 100ms, top 300ms\",\n      }}\n    />\n  );\n};\n\nconst mapStateToProps = ({ bird }) => ({ top: bird.top, rotate: bird.rotate });\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bird);\n\nBird.prototype = {\n  top: PropTypes.number.isRequired,\n  rotate: PropTypes.number.isRequired,\n};\n","import React from \"react\";\n\nimport { screen } from \"../constant\";\n\nimport ImgForeBg from \"../images/fg.png\";\n\nconst ForeGround = () => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        bottom: 0,\n        width: `${`${screen.WIDTH}px`}`,\n        height: `${`${screen.GROUND_HEIGHT}px`}`,\n        background: `url(${ImgForeBg})`,\n      }}\n    />\n  );\n};\n\nexport default ForeGround;\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { screen, pipeInfo } from \"../constant\";\n\nimport ImgBottomPipe from \"../images/pipe-bottom.png\";\nimport ImgTopPipe from \"../images/pipe-top.png\";\n\nconst Pipe = ({ leftPadding, topPipes }) => {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n      }}\n    >\n      {topPipes.map(({ topPipeHeight }, index) => (\n        <div\n          key={index}\n          style={{\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: pipeInfo.WIDTH,\n              left: leftPadding + index * pipeInfo.HORIZONTAL_DISTANCE,\n              transition: \"left 300ms\",\n              top: 0,\n              height: topPipeHeight,\n              background: `url(${ImgTopPipe})`,\n              backgroundPosition: \"bottom\",\n            }}\n          />\n          <div\n            style={{\n              position: \"absolute\",\n              width: pipeInfo.WIDTH,\n              left: leftPadding + index * pipeInfo.HORIZONTAL_DISTANCE,\n              transition: \"left 300ms\",\n              top: topPipeHeight + pipeInfo.VERTICAL_DISTANCE,\n              height:\n                screen.HEIGHT - topPipeHeight - pipeInfo.VERTICAL_DISTANCE,\n              background: `url(${ImgBottomPipe})`,\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ pipe }) => ({\n  leftPadding: pipe.leftPadding,\n  topPipes: pipe.topPipes,\n});\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pipe);\n\nPipe.prototype = {\n  leftPadding: PropTypes.number.isRequired,\n  topPipes: PropTypes.number.isRequired,\n\n  pipeInfo: PropTypes.elementType.isRequired,\n  VERTICAL_DISTANCE: PropTypes.number.isRequired,\n  HORIZONTAL_DISTANCE: PropTypes.number.isRequired,\n\n  screen: PropTypes.elementType.isRequired,\n  HEIGHT: PropTypes.number.isRequired,\n};\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { actionType } from \"../action\";\nimport {\n  gameStatus,\n  pipeInfo,\n  keyCode,\n  screen,\n  interval,\n  birdInfo,\n} from \"../constant\";\nimport Bird from \"../bird/Bird\";\nimport ForeGround from \"./ForeGround\";\nimport Pipe from \"../pipe/Pipe\";\n\nimport ImgBg from \"../images/bg.png\";\n\nlet birdIntervalID;\nlet pipeMoveIntervalID;\nlet pipeGeneratorIntervalID;\n\nclass Game extends Component {\n  handleKeyPress = (e) => {\n    if (e.keyCode === keyCode.SPACE) {\n      this.props.fly();\n    }\n\n    this.props.start();\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keypress\", this.handleKeyPress);\n  }\n\n  render() {\n    return (\n      <StyledGame>\n        <Bird />\n        <Pipe />\n        <ForeGround />\n      </StyledGame>\n    );\n  }\n}\n\nconst fly = () => {\n  return (dispatch) => {\n    dispatch({ type: actionType.BIRD_FLY });\n  };\n};\n\nconst start = () => {\n  return (dispatch, getState) => {\n    const { status } = getState().game;\n\n    if (status !== gameStatus.PLAYING) {\n      birdIntervalID = setInterval(() => {\n        dispatch({ type: actionType.BIRD_FALL });\n        check(dispatch, getState);\n      }, interval.BIRD_FALL);\n\n      pipeMoveIntervalID = setInterval(() => {\n        dispatch({ type: actionType.PIPE_MOVE });\n        check(dispatch, getState);\n      }, interval.PIPE_MOVE);\n\n      pipeGeneratorIntervalID = setInterval(() => {\n        dispatch({ type: actionType.PIPE_GENERATE });\n      }, interval.PIPE_GENEGRATE);\n\n      dispatch({ type: actionType.GAME_START });\n    }\n  };\n};\n\nconst check = (dispatch, getState) => {\n  const { game, bird, pipe } = getState();\n\n  if (game.status === gameStatus.GAME_OVER) {\n    clearInterval(birdIntervalID);\n    clearInterval(pipeMoveIntervalID);\n    clearInterval(pipeGeneratorIntervalID);\n  }\n\n  const pipePosition = pipe.topPipes\n    .map(({ topPipeHeight }, index) => {\n      // x1, y1: bottom left point of top pipe\n      // x2, y2: top right point of bottom pipe\n      return {\n        x1: pipe.leftPadding + index * pipeInfo.HORIZONTAL_DISTANCE,\n        y1: topPipeHeight,\n        x2: pipe.leftPadding + index * pipeInfo.HORIZONTAL_DISTANCE,\n        y2: topPipeHeight + pipeInfo.VERTICAL_DISTANCE,\n      };\n    })\n    .filter(({ x1 }) => x1 > 0 && x1 < screen.WIDTH);\n\n  // if the bird touches the ground\n  if (bird.top > screen.HEIGHT - screen.GROUND_HEIGHT) {\n    dispatch({ type: actionType.GAME_OVER });\n  }\n\n  if (pipePosition.length) {\n    const { x1, y1, x2, y2 } = pipePosition[0];\n    // if the bird touches the pipes\n    if (\n      (x1 < birdInfo.LEFT + 19 &&\n        birdInfo.LEFT + 19 < x1 + pipeInfo.WIDTH &&\n        bird.top + 13 < y1) ||\n      (x2 < birdInfo.LEFT + 19 &&\n        birdInfo.LEFT + 19 < x2 + pipeInfo.WIDTH &&\n        bird.top + 13 > y2)\n    ) {\n      dispatch({ type: actionType.GAME_OVER });\n    }\n  }\n};\n\nconst mapStateToProps = ({ game }) => ({ status: game.status });\nconst mapDispatchToProps = { start, fly };\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n\nstart.prototype = {\n  status: PropTypes.elementType.isRequired,\n};\n\ncheck.prototype = {\n  game: PropTypes.elementType.isRequired,\n  bird: PropTypes.elementType.isRequired,\n  pipe: PropTypes.elementType.isRequired,\n  pipeInfo: PropTypes.elementType.isRequired,\n  screen: PropTypes.elementType.isRequired,\n  topPipeHeight: PropTypes.number.isRequired,\n};\n\nconst StyledGame = styled.div`\n  position: relative;\n  width: ${`${screen.WIDTH}px`};\n  height: ${`${screen.HEIGHT}px`};\n  background: url(${ImgBg});\n  overflow: hidden;\n`;\n","import { Provider } from \"react-redux\";\nimport React from \"react\";\n\nimport Game from \"./game/Game\";\nimport styled from \"styled-components\";\n\nconst App = ({ store }) => {\n  return (\n    <StyledApp>\n      <Provider store={store}>\n        <Game />\n      </Provider>\n    </StyledApp>\n  );\n};\n\nexport default App;\n\nconst StyledApp = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { actionType } from \"../action\";\n\nconst initialState = {\n  top: 250,\n  rotate: 0,\n};\n\nexport default (state = initialState, { type } = {}) => {\n  switch (type) {\n    case actionType.BIRD_FLY:\n      return { ...state, top: state.top - 50, rotate: -20 };\n\n    case actionType.BIRD_FALL:\n      return { ...state, top: state.top + 20, rotate: 0 };\n\n    case actionType.GAME_OVER:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { actionType } from \"../action\";\nimport { pipeInfo } from \"../constant\";\n\nconst initialState = {\n  leftPadding: pipeInfo.LEFT,\n  topPipes: [],\n};\n\nexport default (state = initialState, { type } = {}) => {\n  switch (type) {\n    case actionType.PIPE_MOVE:\n      if (!state.topPipes.length) {\n        return state;\n      }\n      return { ...state, leftPadding: state.leftPadding - 10 };\n\n    case actionType.PIPE_GENERATE:\n      const topPipeHeight = Math.round(Math.random() * 160) + 80;\n      return { ...state, topPipes: [...state.topPipes, { topPipeHeight }] };\n\n    case actionType.GAME_OVER:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport birdReducer from \"./bird/reducer\";\nimport gameReducer from \"./game/reducer\";\nimport pipeReducer from \"./pipe/reducer\";\n\nconst rootReducer = combineReducers({\n  bird: birdReducer,\n  game: gameReducer,\n  pipe: pipeReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n};\n","import { actionType } from \"../action\";\nimport { gameStatus } from \"../constant\";\n\nexport default (state = {}, { type } = {}) => {\n  switch (type) {\n    case actionType.GAME_START:\n      return { ...state, status: gameStatus.PLAYING };\n\n    case actionType.GAME_OVER:\n      return { ...state, status: gameStatus.GAME_OVER };\n\n    default:\n      return state;\n  }\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport configureStore from \"./store\";\n\nconst GlobalStyle = createGlobalStyle`\n${normalize}\n`;\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App store={store} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}